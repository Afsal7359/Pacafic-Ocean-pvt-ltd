{
    "sourceFile": "Backend/Controller/Job.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1719599292776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1719599301804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+\r\n+const Job = require(\"../Model/Job\");\r\n+\r\n+module.exports={\r\n+    AddJob : async(req,res)=>{\r\n+        try {\r\n+           const Data = req.body\r\n+           console.log(Data);\r\n+           await Job.create(Data)\r\n+              const datas = await Job.find().sort({_id:-1});\r\n+              res.status(200).json({\r\n+                success:true,\r\n+                message:\"Job Added Successfully\",\r\n+                data:datas\r\n+              })\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+            res.status(500).json({\r\n+                success:false,\r\n+                message:\"server-error\",\r\n+                error:error.message\r\n+            })\r\n+        }\r\n+    },\r\n+    GetJob: async(req,res)=>{\r\n+        try {\r\n+            const JobData = await Job.find().sort({_id:-1})\r\n+            res.status(200).json({\r\n+                success:true,\r\n+                message:\"Job Data Fetched Successfully\",\r\n+                data:JobData,\r\n+            })\r\n+        } catch (error) {\r\n+            console.log(error);\r\n+            res.status(500).json({\r\n+                success:false,\r\n+                message:\"Server Error\",\r\n+                error:error.message,\r\n+            })\r\n+        }\r\n+    },\r\n+    DeleteJob: async(req,res)=>{\r\n+        try {\r\n+            const id = req.params;\r\n+            const JobData = await Job.findByIdAndDelete(id)\r\n+          \r\n+                res.status(200).json({\r\n+                    success:true,\r\n+                    message:\"Deleted Successfully\",\r\n+                    // data:Data,\r\n+                })\r\n+\r\n+        } catch (error) {\r\n+            res.status(500).json({\r\n+                success:false,\r\n+                message:\"Server - error\"\r\n+            })\r\n+        }\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1719599292776,
            "name": "Commit-0",
            "content": "\r\nconst Job = require(\"../Model/Job\");\r\n\r\nmodule.exports={\r\n    AddJob : async(req,res)=>{\r\n        try {\r\n           const Data = req.body\r\n           log\r\n           await Job.create(Data)\r\n              const datas = await Job.find().sort({_id:-1});\r\n              res.status(200).json({\r\n                success:true,\r\n                message:\"Job Added Successfully\",\r\n                data:datas\r\n              })\r\n        } catch (error) {\r\n            console.log(error);\r\n            res.status(500).json({\r\n                success:false,\r\n                message:\"server-error\",\r\n                error:error.message\r\n            })\r\n        }\r\n    },\r\n    GetJob: async(req,res)=>{\r\n        try {\r\n            const JobData = await Job.find().sort({_id:-1})\r\n            res.status(200).json({\r\n                success:true,\r\n                message:\"Job Data Fetched Successfully\",\r\n                data:JobData,\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n            res.status(500).json({\r\n                success:false,\r\n                message:\"Server Error\",\r\n                error:error.message,\r\n            })\r\n        }\r\n    },\r\n    DeleteJob: async(req,res)=>{\r\n        try {\r\n            const id = req.params;\r\n            const JobData = await Job.findByIdAndDelete(id)\r\n          \r\n                res.status(200).json({\r\n                    success:true,\r\n                    message:\"Deleted Successfully\",\r\n                    // data:Data,\r\n                })\r\n\r\n        } catch (error) {\r\n            res.status(500).json({\r\n                success:false,\r\n                message:\"Server - error\"\r\n            })\r\n        }\r\n    }\r\n}"
        }
    ]
}